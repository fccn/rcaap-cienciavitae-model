//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0.1 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.12.07 at 12:49:04 PM UTC 
//


package pt.cienciavitae.ns.common_enum;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for career-stage-enum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="career-stage-enum"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="T02V01C03"/&gt;
 *     &lt;enumeration value="CS_2"/&gt;
 *     &lt;enumeration value="CS_3"/&gt;
 *     &lt;enumeration value="CS_4"/&gt;
 *     &lt;enumeration value="CS_5"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "career-stage-enum", namespace = "http://www.cienciavitae.pt/ns/common-enum")
@XmlEnum
public enum CareerStageEnum {


    /**
     * PT: Investigador coordenador / EN: 
     * 
     */
    @XmlEnumValue("T02V01C03")
    T_02_V_01_C_03("T02V01C03"),

    /**
     * PT: Investigador principal com habilitação ou agregação / EN: 
     * 
     */
    CS_2("CS_2"),

    /**
     * PT: Investigador auxiliar / EN: 
     * 
     */
    CS_3("CS_3"),

    /**
     * PT: Assistente de investigação / EN: 
     * 
     */
    CS_4("CS_4"),

    /**
     * PT: Estagiário de investigação / EN: 
     * 
     */
    CS_5("CS_5");
    private final String value;

    CareerStageEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CareerStageEnum fromValue(String v) {
        for (CareerStageEnum c: CareerStageEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
